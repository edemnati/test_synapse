{
	"name": "wsib_data_prep",
	"properties": {
		"content": {
			"query": "\nuse wsib_db\ngo\n\n--psaprod.mastertypelist: Remove duplicated rowa based on audit_batch_ts\n/*\nSAS CODE\nproc sort data=mastertypelist_cc(drop=audit_batch_ts) nodupkey;\n\tby CCTL_NAME ID;\nrun;\n*/ \n;\nwith CTE(NAME, unique_ID) as \n(select NAME,\n    ROW_NUMBER() OVER(PARTITION BY NAME ORDER BY audit_batch_ts) as unique_ID\n    from psaprod.mastertypelist)\n\nselect distinct *--count(*), count(distinct audit_batch_ts)\nfrom psaprod.mastertypelist a\nINNER JOIN CTE b\n        ON a.NAME=b.NAME and unique_ID=1\nwhere a.NAME='Matthew Simon';\n\n--Declare variables\n/*\nClm_eval_max_dttm',dhms(&Clm_eval_max_dt.,23,59,59)\n--SAS intnx(): Increments a date, time, or datetime value by a given time interval, and returns a date, time, or datetime value.\ncall symput('Clm_pull_strt_dt', max('1jan2017'd, intnx('month', &Clm_eval_max_dt., -42, 'beginning')));\ncall symput('Clm_pull_strt_dttm', max('1jan2017:00:00:00'dt, intnx('dtmonth', &Clm_eval_max_dttm., -42, 'beginning')));\ncall symput ('Clm_pull_end_dt', intnx('month', &Clm_eval_max_dt., -3, 'end'));\ncall symput ('Clm_pull_end_dttm', intnx('dtmonth', &Clm_eval_max_dttm., -3, 'end'));\n*/\n--CREATE PROCEDURE prep.usp_wsib_data_prep @eval_date varchar(10)\nALTER PROCEDURE prep.usp_wsib_data_prep @eval_date varchar(10)\nAS\n\n----------------------------------------------------------------\n--Set variables\n----------------------------------------------------------------\nDECLARE @eval_date varchar(10) = '2022-11-28'\nDECLARE @Clm_eval_max_dt date = (SELECT FORMAT(CONVERT(date,@eval_date),'yyyy-MM-dd'))\nDECLARE @Clm_eval_max_dttm datetime = (select format(@Clm_eval_max_dt,'yyyy-MM-dd 23:59:59'));\n\nDECLARE @Clm_pull_strt_dt DATETIME = (SELECT FORMAT(MAX(d),'yyyy-MM-dd') FROM (VALUES (CAST('2017-01-01' as date)),\n                                                                (DATEADD(mm, -42, CAST(@Clm_eval_max_dt as date)))\n                                                        ) as max_d(d)\n                                     );\nDECLARE @Clm_pull_strt_dttm DATETIME = (select format(@Clm_eval_max_dt,'yyyy-MM-dd 00:00:00'));\n\nDECLARE @Clm_pull_end_dt DATETIME = (SELECT FORMAT(DATEADD(mm, -3, CAST(@Clm_eval_max_dt as date)),'yyyy-MM-dd'));\nDECLARE @Clm_pull_end_dttm DATETIME = (select format(@Clm_pull_end_dt,'yyyy-MM-dd 00:00:00'));\n\nSELECT @Clm_eval_max_dt, @Clm_eval_max_dttm, @Clm_pull_strt_dt, @Clm_pull_strt_dttm,@Clm_pull_end_dt,@Clm_pull_end_dttm\n\n--GO\n--exec prep.usp_wsib_data_prep @eval_date=N'2022-11-28'\n\n--Cleanup script\ndrop external table prep.Claim1_NLT\ndrop external table prep.COVID19\n----------------------------------------------------------------\n--Create Claim1_NLT table\n----------------------------------------------------------------\n\ncreate external table prep.Claim1_NLT WITH (\n        LOCATION = '/ez-filesystem/wsib_transform_tables/prep.Claim1_NLT.parquet',\n        DATA_SOURCE = [wsib_db_data_source],\n        FILE_FORMAT = ParquetFormat\n) AS\n\tselect a.WSIB_ClaimType,a.PublicID, a.ClaimNumber, a.LossDate as accdt, \n\t\ta.WSIB_ClaimRegistrationDate as Reg_dt,\n\t\ta.AssignedUserID, a.AssignedGroupID, a.Entitlementstate_WC,\n\t\ta.ClaimType_WC, a.ClaimantDenormID, a.PolicyID, \n\t\t(case when (a.WSIB_iseAdjudicatedAllowed  = 1 or \n\t\ta.WSIB_iseAdjudicatedHIA  = 1) then 1 else 0 end) as eAdj,\n\t\ta.PriorSimilarClaimYesNo_WC, a.PriorSimilarCond_WC, a.PriorSimilarSameArea_WC, \n\t\ta.ID as Claim_ID, a.updatetime, a.audit_batch_ts\n\tfrom psaprod.cc_claim as a\n\twhere --a.LossDate between @Clm_pull_end_dttm and @Clm_pull_strt_dttm\n\t\t--and \n\t\ta.WSIB_ClaimRegistrationDate is not null\n\t\tand a.ClaimType_WC = 10002\n\t\tand a.WSIB_ClaimType = 10002 \n        and Entitlementstate_WC = 10001\n\n\n----------------------------------------------------------------\n--Create covid19 table\n----------------------------------------------------------------\ncreate external table prep.COVID19 WITH (\n        LOCATION = '/ez-filesystem/wsib_transform_tables/prep.COVID19.parquet',\n        DATA_SOURCE = [wsib_db_data_source],\n        FILE_FORMAT = ParquetFormat\n) AS\n\tselect distinct a.ID as Claim_ID\n\tfrom psaprod.cc_claim as a\n       left join psaprod.ccx_WSIB_StatCodeSystem as k on k.claim = a.ID\n       left join psaprod.ccx_WSIB_ProjectID as m on m.ID = k.WSIB_ProjectIDs\n\t   left join psaprod.cc_incident as inc on a.ID = inc.ClaimID\n\twhere a.LossDate between @Clm_pull_end_dttm and @Clm_pull_strt_dttm\n\t\tand a.WSIB_ClaimRegistrationDate is not null\n\t\tand a.WSIB_ClaimType = 10002 \n\t\tand (m.WSIB_ProjectCode='NCOV2019'\n\t\t\t\tor a.catastropheid=2901\n\t\t\t\tor inc.NatureOfAccident_WC = 10054)\n\n\n----------------------------------------------------------------\n--Create Decision_dt_NLT table\n----------------------------------------------------------------\ncreate external table prep.Decision_dt_NLT WITH (\n        LOCATION = '/ez-filesystem/wsib_transform_tables/prep.Decision_dt_NLT.parquet',\n        DATA_SOURCE = [wsib_db_data_source],\n        FILE_FORMAT = ParquetFormat\n) AS\n\tselect a.ID as Claim_ID, min(a.updatetime) as Decision_dt\n\tfrom psaprod.cc_claim as a\n\twhere a.ClaimType_WC = 10002 and a.Entitlementstate_WC = 10001\n\t\tand a.LossDate between @Clm_pull_end_dttm and @Clm_pull_strt_dttm\n\t\tand a.WSIB_ClaimRegistrationDate is not null\n\t\tand a.WSIB_ClaimType = 10002\n\tgroup by a.ID        \n\n\n----------------------------------------------------------------\n--Merge Claim1_NLT and Decision_dt_NLT table\n----------------------------------------------------------------\nDECLARE @eval_date varchar(10) = '2022-11-28'\nDECLARE @Clm_eval_max_dt date = (SELECT FORMAT(CONVERT(date,@eval_date),'yyyy-MM-dd'))\nDECLARE @Clm_eval_max_dttm datetime = (select format(@Clm_eval_max_dt,'yyyy-MM-dd 23:59:59'));\n\nDECLARE @Clm_pull_strt_dt DATETIME = (SELECT FORMAT(MAX(d),'yyyy-MM-dd') FROM (VALUES (CAST('2017-01-01' as date)),\n                                                                (DATEADD(mm, -42, CAST(@Clm_eval_max_dt as date)))\n                                                        ) as max_d(d)\n                                     );\nDECLARE @Clm_pull_strt_dttm DATETIME = (select format(@Clm_eval_max_dt,'yyyy-MM-dd 00:00:00'));\n\nDECLARE @Clm_pull_end_dt DATETIME = (SELECT FORMAT(DATEADD(mm, -3, CAST(@Clm_eval_max_dt as date)),'yyyy-MM-dd'));\nDECLARE @Clm_pull_end_dttm DATETIME = (select format(@Clm_pull_end_dt,'yyyy-MM-dd 00:00:00'));\n\n\nDECLARE @DaysToReg_NLT int = 80\n\tselect *,\n\tPERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY datediff(day,convert(date,Reg_dt), convert(date,accdt)))  \n                            OVER (PARTITION BY 1)   as DaysToReg_p25 ,\n\tPERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY datediff(day,convert(date,Reg_dt), convert(date,accdt)))  \n                            OVER (PARTITION BY 1)   as DaysToReg_p50 ,\n\tPERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY datediff(day,convert(date,Reg_dt), convert(date,accdt)))  \n                            OVER (PARTITION BY 1)   as DaysToReg_p75 ,\t\n\tPERCENTILE_CONT(0.95) WITHIN GROUP (ORDER BY datediff(day,convert(date,Reg_dt), convert(date,accdt)))  \n                            OVER (PARTITION BY 1)   as DaysToReg_p95 ,\t\t\t\t\t\t\t\n\n\tPERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY datediff(day,convert(date,Decision_dt), convert(date,Reg_dt)))  \n                            OVER (PARTITION BY 1)   as DaysRegToDec_p25 ,\n\tPERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY datediff(day,convert(date,Decision_dt), convert(date,Reg_dt)))  \n                            OVER (PARTITION BY 1)   as DaysRegToDec_p50 ,\n\tPERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY datediff(day,convert(date,Decision_dt), convert(date,Reg_dt)))  \n                            OVER (PARTITION BY 1)   as DaysRegToDec_p75 ,\t\t\t\n\tPERCENTILE_CONT(0.95) WITHIN GROUP (ORDER BY datediff(day,convert(date,Decision_dt), convert(date,Reg_dt)))  \n                            OVER (PARTITION BY 1)   as DaysRegToDec_p95 ,\t\t\t\n\n\tDaysToReg = datediff(day,convert(date,Reg_dt), convert(date,accdt)),\n\tcase when Decision_dt is null \n\t\tthen Reg_dt\n\tend as Decision_dt,\n\tDaysRegToDec = datediff(day,convert(date,Decision_dt), convert(date,Reg_dt)),\n\tcase when datediff(day,convert(date,Decision_dt), convert(date,Reg_dt)) < 0 then\n\t\t 0\n\tend as DaysRegToDec,\n\n\tcase when DaysToReg >= DaysToReg_p75 then '1'\n\t\t when DaysToReg >= DaysToReg_p95 then '2'\n\t\t else 0\n\tend as Reg_grp,\n\n\tcase when DaysRegToDec <= 1 then '0'\n\t\t when DaysRegToDec >= DaysRegToDec_p95 then RegToDec_grp then '2'\n\t\t else 1\n\tend as RegToDec_grp,\n\n\tfrom prep.Claim1_NLT as a\n    LEFT JOIN prep.Decision_dt_NLT as b on a.Claim_ID= b.Claim_ID\n\twhere datediff(day,convert(date,Reg_dt), convert(date,accdt)) between -30 and @DaysToReg_NLT\n\t\n\n\n\ncreate external table prep.Claim1_NLT_merge WITH (\n        LOCATION = '/ez-filesystem/wsib_transform_tables/prep.Claim1_NLT_merge.parquet',\n        DATA_SOURCE = [wsib_db_data_source],\n        FILE_FORMAT = ParquetFormat\n) AS\n\tselect *,\n\tDaysToReg = Reg_dt - accdt;\n\tcase when Decision_dt is null \n\t\tthen Reg_dt\n\tend as Decision_dt,\n\tDaysRegToDec = Decision_dt - Reg_dt,\n\tcase when DaysRegToDec < 0 then\n\t\t 0\n\tend as DaysRegToDec\n\tfrom psaprod.Claim1_NLT as a\n    LEFT JOIN Decision_dt_NLT as b on a.Claim_ID= b.Claim_ID\n\twhere a.ClaimType_WC = 10002 and a.Entitlementstate_WC = 10001\n\t\tand a.LossDate between @Clm_pull_end_dttm and @Clm_pull_strt_dttm\n\t\tand a.WSIB_ClaimRegistrationDate is not null\n\t\tand a.WSIB_ClaimType = 10002\n\tgroup by Claim_ID        \n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "wsib_db",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}